{"version":3,"sources":["index.js"],"names":["Square","props","type","className","onClick","checked","value","disabled","Advancer","React","Component","RuleInput","this","onChange","Board","i","key","toString","squares","list","map","index","renderSquare","Game","state","history","Array","width","fill","frame","rule","oldSquares","length","newSquares","x","neighbors","isArray","neighborNum","Math","pow","applyRule","setState","concat","event","target","current","newRule","bind","advance","ReactDOM","render","document","getElementById"],"mappings":"0PAKA,SAASA,EAAOC,GACd,OACE,2BAAOC,KAAK,WAAWC,UAAU,gDAAgDC,QAAUH,EAAMG,QAAUC,QAAUJ,EAAMK,MAAQC,UAAQ,I,IAIzIC,E,uKACK,IAAD,OACR,OACC,4BAAQL,UAAU,0GAA0GC,QAAU,kBAAM,EAAKH,MAAMG,YAAvJ,e,GAHoBK,IAAMC,WAUvBC,E,uKAEF,OACE,2BAAOR,UAAU,iBAAjB,QAAsC,2BAAOD,KAAK,OAAOC,UAAU,iBAAiBG,MAAOM,KAAKX,MAAMK,MAAOO,SAAUD,KAAKX,MAAMY,gB,GAHhHJ,IAAMC,WASxBI,E,2KAESC,GACX,OACC,kBAACf,EAAD,CAAQgB,IAAKD,EAAEE,WACdX,MAAOM,KAAKX,MAAMiB,QAAQH,O,+BAKpB,IAAD,OAEDI,EAAOP,KAAKX,MAAMiB,QAAQE,KAAI,SAACd,EAAOe,GAClC,OAAO,EAAKC,aAAaD,MAGnC,OACI,yBAAKlB,UAAU,SACb,yBAAKA,UAAU,+BACZgB,Q,GAnBOV,IAAMC,W,IA6CpBa,E,kDAEJ,WAAYtB,GAAO,IAAD,8BAChB,cAAMA,IACDuB,MAAQ,CACXC,QAAS,CAAC,CACRP,QAASQ,MAAMzB,EAAM0B,OAAOC,MAAK,GAAOA,MAAK,EAAM3B,EAAM0B,MAAQ,EAAG1B,EAAM0B,MAAQ,EAAI,KAExFE,MAAO,EACPX,QAASQ,MAAMzB,EAAM0B,OAAOC,MAAK,GAAOA,MAAK,EAAM3B,EAAM0B,MAAQ,EAAG1B,EAAM0B,MAAQ,EAAI,GACtFG,KAAM,EAAK7B,MAAM6B,MARH,E,sDAiBR,IAAD,OAEDL,EAAUb,KAAKY,MAAMC,QAErBM,EADUN,EAAQA,EAAQO,OAAS,GACdd,QAGrBe,EAAaF,EAAWX,KAAK,SAACc,EAAGb,GAErC,OAAc,IAAVA,GAAeA,IAAW,EAAKpB,MAAM0B,MAAQ,GA/CvD,SAAmBQ,EAAWL,GAG5B,IAAKJ,MAAMU,QAAQD,IAAmC,IAArBA,EAAUH,OAEzC,OAAO,EAKT,IAAMK,EAA6B,EAAfF,EAAU,GAAwB,EAAfA,EAAU,GAASA,EAAU,GAMpE,OAFcG,KAAKC,IAAK,EAAGF,GAAgBP,EAuC1BU,CAFG,CAAET,EAAWV,EAAQ,GAAIU,EAAWV,GAAQU,EAAWV,EAAM,IAE1C,EAAKpB,MAAM6B,SAShDlB,KAAK6B,UAAS,SAACjB,EAAOvB,GAAR,MAAmB,CAC/B4B,MAAOL,EAAMK,MAAQ,EACrBJ,QAASA,EAAQiB,OAAO,CAAC,CACvBxB,QAASe,W,8BAMNU,GACP/B,KAAK6B,SAAS,CAAEX,KAAMa,EAAMC,OAAOtC,U,+BAG3B,IAAD,OACDmB,EAAUb,KAAKY,MAAMC,QACrBoB,EAAUpB,EAAQA,EAAQO,OAAS,GAEzC,OACE,yBAAK7B,UAAU,gCACX,yBAAKA,UAAU,sCACb,kBAACQ,EAAD,CAAWL,MAAOM,KAAKY,MAAMM,KAAMjB,SAAWD,KAAKkC,QAAQC,KAAKnC,QAChE,yBAAKT,UAAU,wBAAf,SAA6CS,KAAKY,MAAMK,OACxD,kBAACrB,EAAD,CAAUJ,QAAS,kBAAM,EAAK4C,cAElC,yBAAK7C,UAAU,cACb,kBAACW,EAAD,CAAOI,QAAU2B,EAAQ3B,WAE3B,yBAAKf,UAAU,aACb,8BACA,mC,GAxESM,IAAMC,WAkFzBuC,IAASC,OACP,kBAAC3B,EAAD,CAAMI,MAAO,GAAIG,KAAM,KACvBqB,SAASC,eAAe,W","file":"static/js/main.2f84e9bc.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './assets/main.css';\n\nfunction Square(props) {\n  return (\n    <input type=\"checkBox\" className=\"square w-5 h-5 rounded-none bg-white border-0\" onClick={ props.onClick } checked={ props.value } disabled />\n  );\n}\n\nclass Advancer extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<button className=\"advancer py-2 px-4 m-2 bg-blue-300 rounded-md hover:bg-red-300 transition duration-500 focus:bg-red-500\" onClick={ () => this.props.onClick() }>\n\t\t\tAdvance\n\t\t\t</button>//\n\t  );\n\t}\n}\n\nclass RuleInput extends React.Component {\n  render() {\n    return (\n      <label className=\"py-2 px-4 m-2\">Rule <input type=\"text\" className=\"ruleInput w-10\" value={this.props.value} onChange={this.props.onChange} />\n      </label>\n    );\n  }\n}\n\nclass Board extends React.Component {\n\n  renderSquare(i) {\n    return (\n    \t<Square key={i.toString()}\n    \t\tvalue={this.props.squares[i]} \n    \t/>//\n    );\n  }\n\n  render() {\n    \n    const list = this.props.squares.map((value, index) => {\n              return this.renderSquare(index);\n              });\n\n    return (\n        <div className=\"board\">\n          <div className=\"boxList flex justify-center\">\n            {list} \n          </div>\n        </div>//\n    )\n  }\n}\n\nfunction applyRule(neighbors, rule)\n{\n\n  if( !Array.isArray(neighbors) || neighbors.length !== 3 )\n  {\n    return false;\n  }\n\n  // Rule 27 = 16 + 8 + 2 + 1 \n  // 0 0 0 1 1 0 1 1\n  const neighborNum = neighbors[0] * 4 + neighbors[1] * 2 + neighbors[2];\n  //0 + 0 + 0 = 0 \n  //2 ^ 0 = 1\n  \n  const match = Math.pow( 2, neighborNum ) & rule;\n  //console.log(\"ApplyRule: \" , neighborNum, match);\n  return match;\n}\n\nclass Game extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(props.width).fill(false).fill(true, props.width / 2, props.width / 2 + 1),\n      }],\n      frame: 0,\n      squares: Array(props.width).fill(false).fill(true, props.width / 2, props.width / 2 + 1),\n      rule: this.props.rule,\n    };\n\n    //check rules\n    \n   //console.log(\"Rule #\" + this.props.rule);\n\n  }\n\n  advance(){\n\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const oldSquares = current.squares;\n    //console.log(oldSquares);\n\n    const newSquares = oldSquares.map( (x, index) => {\n      \n      if( index === 0 || index  === this.props.width - 1 ){\n        return false;\n      }\n\n      var neighbors = [ oldSquares[index - 1], oldSquares[index], oldSquares[index+1] ];\n      //console.log(neighbors);\n      var newVal = applyRule( neighbors, this.props.rule );\n      \n      //console.log(x, index, newVal);\n\n      return newVal;\n       \n    });\n      \n\n    this.setState((state, props) => ({ \n      frame: state.frame + 1,\n      history: history.concat([{\n        squares: newSquares,\n      }]),\n    }));\n\n  }\n\n  newRule( event ){\n    this.setState({ rule: event.target.value });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n\n    return (\n      <div className=\"game mt-10 container mx-auto\">\n          <div className=\"controls flex flex-row bg-gray-200\"> \n            <RuleInput value={this.state.rule} onChange={ this.newRule.bind(this) } />\n            <div className=\"status py-2 px-4 m-2\">Step: {this.state.frame}</div>\n            <Advancer onClick={() => this.advance()} />\n          </div>\n        <div className=\"game-board\">\n          <Board squares={ current.squares } />\n        </div>\n        <div className=\"game-info\">\n          <div>{/* status */}</div>\n          <ol>{/* TODO */}</ol>\n        </div>\n      </div>//\n    );\n  }\n}\n\n// ========================================\n// Rule 27 = 16 + 8 + 2 + 1 \n// 0 0 0 1 1 0 1 1\nReactDOM.render(\n  <Game width={50} rule={27} />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}